ARM GAS  /tmp/ccxuAkrz.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB67:
  25              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include "fonts.h"
  25:Core/Src/main.c **** #include "ssd1306.h"
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* USER CODE END PTD */
  33:Core/Src/main.c **** 
ARM GAS  /tmp/ccxuAkrz.s 			page 2


  34:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END PD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** UART_HandleTypeDef huart1;
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE BEGIN PV */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* USER CODE END PV */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  54:Core/Src/main.c **** void SystemClock_Config(void);
  55:Core/Src/main.c **** static void MX_GPIO_Init(void);
  56:Core/Src/main.c **** static void MX_I2C1_Init(void);
  57:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  58:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE END PFP */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  63:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* USER CODE END 0 */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /**
  68:Core/Src/main.c ****   * @brief  The application entry point.
  69:Core/Src/main.c ****   * @retval int
  70:Core/Src/main.c ****   */
  71:Core/Src/main.c **** int main(void)
  72:Core/Src/main.c **** {
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* USER CODE END 1 */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  81:Core/Src/main.c ****   HAL_Init();
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* USER CODE END Init */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* Configure the system clock */
  88:Core/Src/main.c ****   SystemClock_Config();
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
ARM GAS  /tmp/ccxuAkrz.s 			page 3


  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* USER CODE END SysInit */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* Initialize all configured peripherals */
  95:Core/Src/main.c ****   MX_GPIO_Init();
  96:Core/Src/main.c ****   MX_I2C1_Init();
  97:Core/Src/main.c ****   MX_USART1_UART_Init();
  98:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  99:Core/Src/main.c ****   SSD1306_Init();
 100:Core/Src/main.c ****   char snum[5];
 101:Core/Src/main.c ****   /*
 102:Core/Src/main.c ****   SSD1306_GotoXY (0,0);
 103:Core/Src/main.c ****   SSD1306_Puts ("Oci", &Font_11x18, 1);
 104:Core/Src/main.c ****   SSD1306_GotoXY (0, 30);
 105:Core/Src/main.c ****   SSD1306_Puts ("Blu", &Font_11x18, 1);
 106:Core/Src/main.c ****   SSD1306_UpdateScreen();
 107:Core/Src/main.c ****   HAL_Delay (5000);
 108:Core/Src/main.c ****   SSD1306_Clear();
 109:Core/Src/main.c ****   */
 110:Core/Src/main.c ****   
 111:Core/Src/main.c ****   /* USER CODE END 2 */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* Infinite loop */
 114:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 115:Core/Src/main.c ****   while (1)
 116:Core/Src/main.c ****   {
 117:Core/Src/main.c ****     /* USER CODE END WHILE */
 118:Core/Src/main.c ****     SSD1306_GotoXY (0,0);
 119:Core/Src/main.c ****     SSD1306_Puts ("Oci", &Font_11x18, 1);
 120:Core/Src/main.c ****     SSD1306_GotoXY (0, 30);
 121:Core/Src/main.c ****     SSD1306_Puts ("Blu", &Font_11x18, 1);
 122:Core/Src/main.c ****     SSD1306_UpdateScreen();
 123:Core/Src/main.c ****     HAL_Delay (5000);
 124:Core/Src/main.c ****     SSD1306_Clear();
 125:Core/Src/main.c ****     HAL_Delay (3000);
 126:Core/Src/main.c ****     /*
 127:Core/Src/main.c ****       for ( int x = 1; x <= 10000 ; x++ )
 128:Core/Src/main.c **** 	  {
 129:Core/Src/main.c **** 		  itoa(x, snum, 10);
 130:Core/Src/main.c **** 		  SSD1306_GotoXY (0, 30);
 131:Core/Src/main.c **** 		  SSD1306_Puts ("             ", &Font_16x26, 1);
 132:Core/Src/main.c **** 		  SSD1306_UpdateScreen();
 133:Core/Src/main.c **** 		  if(x < 10) {
 134:Core/Src/main.c **** 			  SSD1306_GotoXY (53, 30);  // 1 DIGIT
 135:Core/Src/main.c **** 		  }
 136:Core/Src/main.c **** 		  else if (x < 100 ) {
 137:Core/Src/main.c **** 			  SSD1306_GotoXY (45, 30);  // 2 DIGITS
 138:Core/Src/main.c **** 		  }
 139:Core/Src/main.c **** 		  else if (x < 1000 ) {
 140:Core/Src/main.c **** 			  SSD1306_GotoXY (37, 30);  // 3 DIGITS
 141:Core/Src/main.c **** 		  }
 142:Core/Src/main.c **** 		  else {
 143:Core/Src/main.c **** 			  SSD1306_GotoXY (30, 30);  // 4 DIGIS
 144:Core/Src/main.c **** 		  }
 145:Core/Src/main.c **** 		  SSD1306_Puts (snum, &Font_16x26, 1);
 146:Core/Src/main.c **** 		  SSD1306_UpdateScreen();
 147:Core/Src/main.c **** 		  HAL_Delay (500);
ARM GAS  /tmp/ccxuAkrz.s 			page 4


 148:Core/Src/main.c **** 	  }*/
 149:Core/Src/main.c **** 
 150:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 151:Core/Src/main.c ****   }
 152:Core/Src/main.c ****   /* USER CODE END 3 */
 153:Core/Src/main.c **** }
 154:Core/Src/main.c **** 
 155:Core/Src/main.c **** /**
 156:Core/Src/main.c ****   * @brief System Clock Configuration
 157:Core/Src/main.c ****   * @retval None
 158:Core/Src/main.c ****   */
 159:Core/Src/main.c **** void SystemClock_Config(void)
 160:Core/Src/main.c **** {
 161:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 162:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 165:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 166:Core/Src/main.c ****   */
 167:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 168:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 169:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 170:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 171:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 172:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 173:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 174:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 175:Core/Src/main.c ****   {
 176:Core/Src/main.c ****     Error_Handler();
 177:Core/Src/main.c ****   }
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 180:Core/Src/main.c ****   */
 181:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 182:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 183:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 184:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 185:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 186:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 187:Core/Src/main.c **** 
 188:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 189:Core/Src/main.c ****   {
 190:Core/Src/main.c ****     Error_Handler();
 191:Core/Src/main.c ****   }
 192:Core/Src/main.c **** }
 193:Core/Src/main.c **** 
 194:Core/Src/main.c **** /**
 195:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 196:Core/Src/main.c ****   * @param None
 197:Core/Src/main.c ****   * @retval None
 198:Core/Src/main.c ****   */
 199:Core/Src/main.c **** static void MX_I2C1_Init(void)
 200:Core/Src/main.c **** {
 201:Core/Src/main.c **** 
 202:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 203:Core/Src/main.c **** 
 204:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
ARM GAS  /tmp/ccxuAkrz.s 			page 5


 205:Core/Src/main.c **** 
 206:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 207:Core/Src/main.c **** 
 208:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 209:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 210:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 400000;
 211:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 212:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 213:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 214:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 215:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 216:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 217:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 218:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 219:Core/Src/main.c ****   {
 220:Core/Src/main.c ****     Error_Handler();
 221:Core/Src/main.c ****   }
 222:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 223:Core/Src/main.c **** 
 224:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 225:Core/Src/main.c **** 
 226:Core/Src/main.c **** }
 227:Core/Src/main.c **** 
 228:Core/Src/main.c **** /**
 229:Core/Src/main.c ****   * @brief USART1 Initialization Function
 230:Core/Src/main.c ****   * @param None
 231:Core/Src/main.c ****   * @retval None
 232:Core/Src/main.c ****   */
 233:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 234:Core/Src/main.c **** {
 235:Core/Src/main.c **** 
 236:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 237:Core/Src/main.c **** 
 238:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 239:Core/Src/main.c **** 
 240:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 241:Core/Src/main.c **** 
 242:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 243:Core/Src/main.c ****   huart1.Instance = USART1;
 244:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 245:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 246:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 247:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 248:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 249:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 250:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 251:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 252:Core/Src/main.c ****   {
 253:Core/Src/main.c ****     Error_Handler();
 254:Core/Src/main.c ****   }
 255:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 256:Core/Src/main.c **** 
 257:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 258:Core/Src/main.c **** 
 259:Core/Src/main.c **** }
 260:Core/Src/main.c **** 
 261:Core/Src/main.c **** /**
ARM GAS  /tmp/ccxuAkrz.s 			page 6


 262:Core/Src/main.c ****   * @brief GPIO Initialization Function
 263:Core/Src/main.c ****   * @param None
 264:Core/Src/main.c ****   * @retval None
 265:Core/Src/main.c ****   */
 266:Core/Src/main.c **** static void MX_GPIO_Init(void)
 267:Core/Src/main.c **** {
  26              		.loc 1 267 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 16
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 84B0     		sub	sp, sp, #16
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 16
 268:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 269:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 270:Core/Src/main.c **** 
 271:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 272:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  34              		.loc 1 272 3 view .LVU1
  35              	.LBB4:
  36              		.loc 1 272 3 view .LVU2
  37              		.loc 1 272 3 view .LVU3
  38 0002 0F4B     		ldr	r3, .L3
  39 0004 9A69     		ldr	r2, [r3, #24]
  40 0006 42F02002 		orr	r2, r2, #32
  41 000a 9A61     		str	r2, [r3, #24]
  42              		.loc 1 272 3 view .LVU4
  43 000c 9A69     		ldr	r2, [r3, #24]
  44 000e 02F02002 		and	r2, r2, #32
  45 0012 0192     		str	r2, [sp, #4]
  46              		.loc 1 272 3 view .LVU5
  47 0014 019A     		ldr	r2, [sp, #4]
  48              	.LBE4:
  49              		.loc 1 272 3 view .LVU6
 273:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  50              		.loc 1 273 3 view .LVU7
  51              	.LBB5:
  52              		.loc 1 273 3 view .LVU8
  53              		.loc 1 273 3 view .LVU9
  54 0016 9A69     		ldr	r2, [r3, #24]
  55 0018 42F00402 		orr	r2, r2, #4
  56 001c 9A61     		str	r2, [r3, #24]
  57              		.loc 1 273 3 view .LVU10
  58 001e 9A69     		ldr	r2, [r3, #24]
  59 0020 02F00402 		and	r2, r2, #4
  60 0024 0292     		str	r2, [sp, #8]
  61              		.loc 1 273 3 view .LVU11
  62 0026 029A     		ldr	r2, [sp, #8]
  63              	.LBE5:
  64              		.loc 1 273 3 view .LVU12
 274:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  65              		.loc 1 274 3 view .LVU13
  66              	.LBB6:
  67              		.loc 1 274 3 view .LVU14
  68              		.loc 1 274 3 view .LVU15
  69 0028 9A69     		ldr	r2, [r3, #24]
ARM GAS  /tmp/ccxuAkrz.s 			page 7


  70 002a 42F00802 		orr	r2, r2, #8
  71 002e 9A61     		str	r2, [r3, #24]
  72              		.loc 1 274 3 view .LVU16
  73 0030 9B69     		ldr	r3, [r3, #24]
  74 0032 03F00803 		and	r3, r3, #8
  75 0036 0393     		str	r3, [sp, #12]
  76              		.loc 1 274 3 view .LVU17
  77 0038 039B     		ldr	r3, [sp, #12]
  78              	.LBE6:
  79              		.loc 1 274 3 view .LVU18
 275:Core/Src/main.c **** 
 276:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 277:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 278:Core/Src/main.c **** }
  80              		.loc 1 278 1 is_stmt 0 view .LVU19
  81 003a 04B0     		add	sp, sp, #16
  82              	.LCFI1:
  83              		.cfi_def_cfa_offset 0
  84              		@ sp needed
  85 003c 7047     		bx	lr
  86              	.L4:
  87 003e 00BF     		.align	2
  88              	.L3:
  89 0040 00100240 		.word	1073876992
  90              		.cfi_endproc
  91              	.LFE67:
  93              		.section	.text.Error_Handler,"ax",%progbits
  94              		.align	1
  95              		.global	Error_Handler
  96              		.syntax unified
  97              		.thumb
  98              		.thumb_func
  99              		.fpu softvfp
 101              	Error_Handler:
 102              	.LFB68:
 279:Core/Src/main.c **** 
 280:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 281:Core/Src/main.c **** 
 282:Core/Src/main.c **** /* USER CODE END 4 */
 283:Core/Src/main.c **** 
 284:Core/Src/main.c **** /**
 285:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 286:Core/Src/main.c ****   * @retval None
 287:Core/Src/main.c ****   */
 288:Core/Src/main.c **** void Error_Handler(void)
 289:Core/Src/main.c **** {
 103              		.loc 1 289 1 is_stmt 1 view -0
 104              		.cfi_startproc
 105              		@ Volatile: function does not return.
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 290:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 291:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 292:Core/Src/main.c ****   __disable_irq();
 109              		.loc 1 292 3 view .LVU21
 110              	.LBB7:
ARM GAS  /tmp/ccxuAkrz.s 			page 8


 111              	.LBI7:
 112              		.file 2 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****  * @version  V4.30
   5:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****  * @date     20. October 2015
   6:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
   9:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    All rights reserved.
  10:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****      specific prior written permission.
  20:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    *
  21:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
  35:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
  38:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** #endif
  45:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
  46:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
  47:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****   @{
  51:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****  */
  52:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
  53:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** /**
  54:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
ARM GAS  /tmp/ccxuAkrz.s 			page 9


  56:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****  */
  58:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** {
  60:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** }
  62:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
  63:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
  64:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** /**
  65:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****  */
  69:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
 113              		.loc 2 69 57 view .LVU22
 114              	.LBB8:
  70:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** {
  71:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 115              		.loc 2 71 3 view .LVU23
 116              		.syntax unified
 117              	@ 71 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h" 1
 118 0000 72B6     		cpsid i
 119              	@ 0 "" 2
 120              		.thumb
 121              		.syntax unified
 122              	.L6:
 123              	.LBE8:
 124              	.LBE7:
 293:Core/Src/main.c ****   while (1)
 125              		.loc 1 293 3 discriminator 1 view .LVU24
 294:Core/Src/main.c ****   {
 295:Core/Src/main.c ****   }
 126              		.loc 1 295 3 discriminator 1 view .LVU25
 293:Core/Src/main.c ****   while (1)
 127              		.loc 1 293 9 discriminator 1 view .LVU26
 128 0002 FEE7     		b	.L6
 129              		.cfi_endproc
 130              	.LFE68:
 132              		.section	.text.MX_I2C1_Init,"ax",%progbits
 133              		.align	1
 134              		.syntax unified
 135              		.thumb
 136              		.thumb_func
 137              		.fpu softvfp
 139              	MX_I2C1_Init:
 140              	.LFB65:
 200:Core/Src/main.c **** 
 141              		.loc 1 200 1 view -0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145 0000 08B5     		push	{r3, lr}
 146              	.LCFI2:
 147              		.cfi_def_cfa_offset 8
 148              		.cfi_offset 3, -8
 149              		.cfi_offset 14, -4
 209:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 400000;
ARM GAS  /tmp/ccxuAkrz.s 			page 10


 150              		.loc 1 209 3 view .LVU28
 209:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 400000;
 151              		.loc 1 209 18 is_stmt 0 view .LVU29
 152 0002 0A48     		ldr	r0, .L11
 153 0004 0A4B     		ldr	r3, .L11+4
 154 0006 0360     		str	r3, [r0]
 210:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 155              		.loc 1 210 3 is_stmt 1 view .LVU30
 210:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 156              		.loc 1 210 25 is_stmt 0 view .LVU31
 157 0008 0A4B     		ldr	r3, .L11+8
 158 000a 4360     		str	r3, [r0, #4]
 211:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 159              		.loc 1 211 3 is_stmt 1 view .LVU32
 211:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 160              		.loc 1 211 24 is_stmt 0 view .LVU33
 161 000c 0023     		movs	r3, #0
 162 000e 8360     		str	r3, [r0, #8]
 212:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 163              		.loc 1 212 3 is_stmt 1 view .LVU34
 212:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 164              		.loc 1 212 26 is_stmt 0 view .LVU35
 165 0010 C360     		str	r3, [r0, #12]
 213:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 166              		.loc 1 213 3 is_stmt 1 view .LVU36
 213:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 167              		.loc 1 213 29 is_stmt 0 view .LVU37
 168 0012 4FF48042 		mov	r2, #16384
 169 0016 0261     		str	r2, [r0, #16]
 214:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 170              		.loc 1 214 3 is_stmt 1 view .LVU38
 214:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 171              		.loc 1 214 30 is_stmt 0 view .LVU39
 172 0018 4361     		str	r3, [r0, #20]
 215:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 173              		.loc 1 215 3 is_stmt 1 view .LVU40
 215:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 174              		.loc 1 215 26 is_stmt 0 view .LVU41
 175 001a 8361     		str	r3, [r0, #24]
 216:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 176              		.loc 1 216 3 is_stmt 1 view .LVU42
 216:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 177              		.loc 1 216 30 is_stmt 0 view .LVU43
 178 001c C361     		str	r3, [r0, #28]
 217:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 179              		.loc 1 217 3 is_stmt 1 view .LVU44
 217:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 180              		.loc 1 217 28 is_stmt 0 view .LVU45
 181 001e 0362     		str	r3, [r0, #32]
 218:Core/Src/main.c ****   {
 182              		.loc 1 218 3 is_stmt 1 view .LVU46
 218:Core/Src/main.c ****   {
 183              		.loc 1 218 7 is_stmt 0 view .LVU47
 184 0020 FFF7FEFF 		bl	HAL_I2C_Init
 185              	.LVL0:
 218:Core/Src/main.c ****   {
 186              		.loc 1 218 6 view .LVU48
ARM GAS  /tmp/ccxuAkrz.s 			page 11


 187 0024 00B9     		cbnz	r0, .L10
 226:Core/Src/main.c **** 
 188              		.loc 1 226 1 view .LVU49
 189 0026 08BD     		pop	{r3, pc}
 190              	.L10:
 220:Core/Src/main.c ****   }
 191              		.loc 1 220 5 is_stmt 1 view .LVU50
 192 0028 FFF7FEFF 		bl	Error_Handler
 193              	.LVL1:
 194              	.L12:
 195              		.align	2
 196              	.L11:
 197 002c 00000000 		.word	.LANCHOR0
 198 0030 00540040 		.word	1073763328
 199 0034 801A0600 		.word	400000
 200              		.cfi_endproc
 201              	.LFE65:
 203              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 204              		.align	1
 205              		.syntax unified
 206              		.thumb
 207              		.thumb_func
 208              		.fpu softvfp
 210              	MX_USART1_UART_Init:
 211              	.LFB66:
 234:Core/Src/main.c **** 
 212              		.loc 1 234 1 view -0
 213              		.cfi_startproc
 214              		@ args = 0, pretend = 0, frame = 0
 215              		@ frame_needed = 0, uses_anonymous_args = 0
 216 0000 08B5     		push	{r3, lr}
 217              	.LCFI3:
 218              		.cfi_def_cfa_offset 8
 219              		.cfi_offset 3, -8
 220              		.cfi_offset 14, -4
 243:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 221              		.loc 1 243 3 view .LVU52
 243:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 222              		.loc 1 243 19 is_stmt 0 view .LVU53
 223 0002 0A48     		ldr	r0, .L17
 224 0004 0A4B     		ldr	r3, .L17+4
 225 0006 0360     		str	r3, [r0]
 244:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 226              		.loc 1 244 3 is_stmt 1 view .LVU54
 244:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 227              		.loc 1 244 24 is_stmt 0 view .LVU55
 228 0008 4FF4E133 		mov	r3, #115200
 229 000c 4360     		str	r3, [r0, #4]
 245:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 230              		.loc 1 245 3 is_stmt 1 view .LVU56
 245:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 231              		.loc 1 245 26 is_stmt 0 view .LVU57
 232 000e 0023     		movs	r3, #0
 233 0010 8360     		str	r3, [r0, #8]
 246:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 234              		.loc 1 246 3 is_stmt 1 view .LVU58
 246:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
ARM GAS  /tmp/ccxuAkrz.s 			page 12


 235              		.loc 1 246 24 is_stmt 0 view .LVU59
 236 0012 C360     		str	r3, [r0, #12]
 247:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 237              		.loc 1 247 3 is_stmt 1 view .LVU60
 247:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 238              		.loc 1 247 22 is_stmt 0 view .LVU61
 239 0014 0361     		str	r3, [r0, #16]
 248:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 240              		.loc 1 248 3 is_stmt 1 view .LVU62
 248:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 241              		.loc 1 248 20 is_stmt 0 view .LVU63
 242 0016 0C22     		movs	r2, #12
 243 0018 4261     		str	r2, [r0, #20]
 249:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 244              		.loc 1 249 3 is_stmt 1 view .LVU64
 249:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 245              		.loc 1 249 25 is_stmt 0 view .LVU65
 246 001a 8361     		str	r3, [r0, #24]
 250:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 247              		.loc 1 250 3 is_stmt 1 view .LVU66
 250:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 248              		.loc 1 250 28 is_stmt 0 view .LVU67
 249 001c C361     		str	r3, [r0, #28]
 251:Core/Src/main.c ****   {
 250              		.loc 1 251 3 is_stmt 1 view .LVU68
 251:Core/Src/main.c ****   {
 251              		.loc 1 251 7 is_stmt 0 view .LVU69
 252 001e FFF7FEFF 		bl	HAL_UART_Init
 253              	.LVL2:
 251:Core/Src/main.c ****   {
 254              		.loc 1 251 6 view .LVU70
 255 0022 00B9     		cbnz	r0, .L16
 259:Core/Src/main.c **** 
 256              		.loc 1 259 1 view .LVU71
 257 0024 08BD     		pop	{r3, pc}
 258              	.L16:
 253:Core/Src/main.c ****   }
 259              		.loc 1 253 5 is_stmt 1 view .LVU72
 260 0026 FFF7FEFF 		bl	Error_Handler
 261              	.LVL3:
 262              	.L18:
 263 002a 00BF     		.align	2
 264              	.L17:
 265 002c 00000000 		.word	.LANCHOR1
 266 0030 00380140 		.word	1073821696
 267              		.cfi_endproc
 268              	.LFE66:
 270              		.section	.text.SystemClock_Config,"ax",%progbits
 271              		.align	1
 272              		.global	SystemClock_Config
 273              		.syntax unified
 274              		.thumb
 275              		.thumb_func
 276              		.fpu softvfp
 278              	SystemClock_Config:
 279              	.LFB64:
 160:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
ARM GAS  /tmp/ccxuAkrz.s 			page 13


 280              		.loc 1 160 1 view -0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 64
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284 0000 00B5     		push	{lr}
 285              	.LCFI4:
 286              		.cfi_def_cfa_offset 4
 287              		.cfi_offset 14, -4
 288 0002 91B0     		sub	sp, sp, #68
 289              	.LCFI5:
 290              		.cfi_def_cfa_offset 72
 161:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 291              		.loc 1 161 3 view .LVU74
 161:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 292              		.loc 1 161 22 is_stmt 0 view .LVU75
 293 0004 2822     		movs	r2, #40
 294 0006 0021     		movs	r1, #0
 295 0008 06A8     		add	r0, sp, #24
 296 000a FFF7FEFF 		bl	memset
 297              	.LVL4:
 162:Core/Src/main.c **** 
 298              		.loc 1 162 3 is_stmt 1 view .LVU76
 162:Core/Src/main.c **** 
 299              		.loc 1 162 22 is_stmt 0 view .LVU77
 300 000e 0023     		movs	r3, #0
 301 0010 0193     		str	r3, [sp, #4]
 302 0012 0293     		str	r3, [sp, #8]
 303 0014 0393     		str	r3, [sp, #12]
 304 0016 0493     		str	r3, [sp, #16]
 305 0018 0593     		str	r3, [sp, #20]
 167:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 306              		.loc 1 167 3 is_stmt 1 view .LVU78
 167:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 307              		.loc 1 167 36 is_stmt 0 view .LVU79
 308 001a 0122     		movs	r2, #1
 309 001c 0692     		str	r2, [sp, #24]
 168:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 310              		.loc 1 168 3 is_stmt 1 view .LVU80
 168:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 311              		.loc 1 168 30 is_stmt 0 view .LVU81
 312 001e 4FF48033 		mov	r3, #65536
 313 0022 0793     		str	r3, [sp, #28]
 169:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 314              		.loc 1 169 3 is_stmt 1 view .LVU82
 170:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 315              		.loc 1 170 3 view .LVU83
 170:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 316              		.loc 1 170 30 is_stmt 0 view .LVU84
 317 0024 0A92     		str	r2, [sp, #40]
 171:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 318              		.loc 1 171 3 is_stmt 1 view .LVU85
 171:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 319              		.loc 1 171 34 is_stmt 0 view .LVU86
 320 0026 0222     		movs	r2, #2
 321 0028 0D92     		str	r2, [sp, #52]
 172:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 322              		.loc 1 172 3 is_stmt 1 view .LVU87
ARM GAS  /tmp/ccxuAkrz.s 			page 14


 172:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 323              		.loc 1 172 35 is_stmt 0 view .LVU88
 324 002a 0E93     		str	r3, [sp, #56]
 173:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 325              		.loc 1 173 3 is_stmt 1 view .LVU89
 173:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 326              		.loc 1 173 32 is_stmt 0 view .LVU90
 327 002c 4FF4E013 		mov	r3, #1835008
 328 0030 0F93     		str	r3, [sp, #60]
 174:Core/Src/main.c ****   {
 329              		.loc 1 174 3 is_stmt 1 view .LVU91
 174:Core/Src/main.c ****   {
 330              		.loc 1 174 7 is_stmt 0 view .LVU92
 331 0032 06A8     		add	r0, sp, #24
 332 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
 333              	.LVL5:
 174:Core/Src/main.c ****   {
 334              		.loc 1 174 6 view .LVU93
 335 0038 80B9     		cbnz	r0, .L23
 181:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 336              		.loc 1 181 3 is_stmt 1 view .LVU94
 181:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 337              		.loc 1 181 31 is_stmt 0 view .LVU95
 338 003a 0F23     		movs	r3, #15
 339 003c 0193     		str	r3, [sp, #4]
 183:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 340              		.loc 1 183 3 is_stmt 1 view .LVU96
 183:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 341              		.loc 1 183 34 is_stmt 0 view .LVU97
 342 003e 0221     		movs	r1, #2
 343 0040 0291     		str	r1, [sp, #8]
 184:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 344              		.loc 1 184 3 is_stmt 1 view .LVU98
 184:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 345              		.loc 1 184 35 is_stmt 0 view .LVU99
 346 0042 0023     		movs	r3, #0
 347 0044 0393     		str	r3, [sp, #12]
 185:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 348              		.loc 1 185 3 is_stmt 1 view .LVU100
 185:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 349              		.loc 1 185 36 is_stmt 0 view .LVU101
 350 0046 4FF48062 		mov	r2, #1024
 351 004a 0492     		str	r2, [sp, #16]
 186:Core/Src/main.c **** 
 352              		.loc 1 186 3 is_stmt 1 view .LVU102
 186:Core/Src/main.c **** 
 353              		.loc 1 186 36 is_stmt 0 view .LVU103
 354 004c 0593     		str	r3, [sp, #20]
 188:Core/Src/main.c ****   {
 355              		.loc 1 188 3 is_stmt 1 view .LVU104
 188:Core/Src/main.c ****   {
 356              		.loc 1 188 7 is_stmt 0 view .LVU105
 357 004e 01A8     		add	r0, sp, #4
 358 0050 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 359              	.LVL6:
 188:Core/Src/main.c ****   {
 360              		.loc 1 188 6 view .LVU106
ARM GAS  /tmp/ccxuAkrz.s 			page 15


 361 0054 20B9     		cbnz	r0, .L24
 192:Core/Src/main.c **** 
 362              		.loc 1 192 1 view .LVU107
 363 0056 11B0     		add	sp, sp, #68
 364              	.LCFI6:
 365              		.cfi_remember_state
 366              		.cfi_def_cfa_offset 4
 367              		@ sp needed
 368 0058 5DF804FB 		ldr	pc, [sp], #4
 369              	.L23:
 370              	.LCFI7:
 371              		.cfi_restore_state
 176:Core/Src/main.c ****   }
 372              		.loc 1 176 5 is_stmt 1 view .LVU108
 373 005c FFF7FEFF 		bl	Error_Handler
 374              	.LVL7:
 375              	.L24:
 190:Core/Src/main.c ****   }
 376              		.loc 1 190 5 view .LVU109
 377 0060 FFF7FEFF 		bl	Error_Handler
 378              	.LVL8:
 379              		.cfi_endproc
 380              	.LFE64:
 382              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 383              		.align	2
 384              	.LC0:
 385 0000 4F636900 		.ascii	"Oci\000"
 386              		.align	2
 387              	.LC1:
 388 0004 426C7500 		.ascii	"Blu\000"
 389              		.section	.text.main,"ax",%progbits
 390              		.align	1
 391              		.global	main
 392              		.syntax unified
 393              		.thumb
 394              		.thumb_func
 395              		.fpu softvfp
 397              	main:
 398              	.LFB63:
  72:Core/Src/main.c **** 
 399              		.loc 1 72 1 view -0
 400              		.cfi_startproc
 401              		@ Volatile: function does not return.
 402              		@ args = 0, pretend = 0, frame = 0
 403              		@ frame_needed = 0, uses_anonymous_args = 0
 404 0000 08B5     		push	{r3, lr}
 405              	.LCFI8:
 406              		.cfi_def_cfa_offset 8
 407              		.cfi_offset 3, -8
 408              		.cfi_offset 14, -4
  81:Core/Src/main.c **** 
 409              		.loc 1 81 3 view .LVU111
 410 0002 FFF7FEFF 		bl	HAL_Init
 411              	.LVL9:
  88:Core/Src/main.c **** 
 412              		.loc 1 88 3 view .LVU112
 413 0006 FFF7FEFF 		bl	SystemClock_Config
ARM GAS  /tmp/ccxuAkrz.s 			page 16


 414              	.LVL10:
  95:Core/Src/main.c ****   MX_I2C1_Init();
 415              		.loc 1 95 3 view .LVU113
 416 000a FFF7FEFF 		bl	MX_GPIO_Init
 417              	.LVL11:
  96:Core/Src/main.c ****   MX_USART1_UART_Init();
 418              		.loc 1 96 3 view .LVU114
 419 000e FFF7FEFF 		bl	MX_I2C1_Init
 420              	.LVL12:
  97:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 421              		.loc 1 97 3 view .LVU115
 422 0012 FFF7FEFF 		bl	MX_USART1_UART_Init
 423              	.LVL13:
  99:Core/Src/main.c ****   char snum[5];
 424              		.loc 1 99 3 view .LVU116
 425 0016 FFF7FEFF 		bl	SSD1306_Init
 426              	.LVL14:
 427              	.L26:
 100:Core/Src/main.c ****   /*
 428              		.loc 1 100 3 discriminator 1 view .LVU117
 115:Core/Src/main.c ****   {
 429              		.loc 1 115 3 discriminator 1 view .LVU118
 118:Core/Src/main.c ****     SSD1306_Puts ("Oci", &Font_11x18, 1);
 430              		.loc 1 118 5 discriminator 1 view .LVU119
 431 001a 0021     		movs	r1, #0
 432 001c 0846     		mov	r0, r1
 433 001e FFF7FEFF 		bl	SSD1306_GotoXY
 434              	.LVL15:
 119:Core/Src/main.c ****     SSD1306_GotoXY (0, 30);
 435              		.loc 1 119 5 discriminator 1 view .LVU120
 436 0022 0E4C     		ldr	r4, .L28
 437 0024 0122     		movs	r2, #1
 438 0026 2146     		mov	r1, r4
 439 0028 0D48     		ldr	r0, .L28+4
 440 002a FFF7FEFF 		bl	SSD1306_Puts
 441              	.LVL16:
 120:Core/Src/main.c ****     SSD1306_Puts ("Blu", &Font_11x18, 1);
 442              		.loc 1 120 5 discriminator 1 view .LVU121
 443 002e 1E21     		movs	r1, #30
 444 0030 0020     		movs	r0, #0
 445 0032 FFF7FEFF 		bl	SSD1306_GotoXY
 446              	.LVL17:
 121:Core/Src/main.c ****     SSD1306_UpdateScreen();
 447              		.loc 1 121 5 discriminator 1 view .LVU122
 448 0036 0122     		movs	r2, #1
 449 0038 2146     		mov	r1, r4
 450 003a 0A48     		ldr	r0, .L28+8
 451 003c FFF7FEFF 		bl	SSD1306_Puts
 452              	.LVL18:
 122:Core/Src/main.c ****     HAL_Delay (5000);
 453              		.loc 1 122 5 discriminator 1 view .LVU123
 454 0040 FFF7FEFF 		bl	SSD1306_UpdateScreen
 455              	.LVL19:
 123:Core/Src/main.c ****     SSD1306_Clear();
 456              		.loc 1 123 5 discriminator 1 view .LVU124
 457 0044 41F28830 		movw	r0, #5000
 458 0048 FFF7FEFF 		bl	HAL_Delay
ARM GAS  /tmp/ccxuAkrz.s 			page 17


 459              	.LVL20:
 124:Core/Src/main.c ****     HAL_Delay (3000);
 460              		.loc 1 124 5 discriminator 1 view .LVU125
 461 004c FFF7FEFF 		bl	SSD1306_Clear
 462              	.LVL21:
 125:Core/Src/main.c ****     /*
 463              		.loc 1 125 5 discriminator 1 view .LVU126
 464 0050 40F6B830 		movw	r0, #3000
 465 0054 FFF7FEFF 		bl	HAL_Delay
 466              	.LVL22:
 115:Core/Src/main.c ****   {
 467              		.loc 1 115 9 discriminator 1 view .LVU127
 468 0058 DFE7     		b	.L26
 469              	.L29:
 470 005a 00BF     		.align	2
 471              	.L28:
 472 005c 00000000 		.word	Font_11x18
 473 0060 00000000 		.word	.LC0
 474 0064 04000000 		.word	.LC1
 475              		.cfi_endproc
 476              	.LFE63:
 478              		.global	huart1
 479              		.global	hi2c1
 480              		.section	.bss.hi2c1,"aw",%nobits
 481              		.align	2
 482              		.set	.LANCHOR0,. + 0
 485              	hi2c1:
 486 0000 00000000 		.space	84
 486      00000000 
 486      00000000 
 486      00000000 
 486      00000000 
 487              		.section	.bss.huart1,"aw",%nobits
 488              		.align	2
 489              		.set	.LANCHOR1,. + 0
 492              	huart1:
 493 0000 00000000 		.space	72
 493      00000000 
 493      00000000 
 493      00000000 
 493      00000000 
 494              		.text
 495              	.Letext0:
 496              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 497              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 498              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 499              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 500              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 501              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 502              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 503              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 504              		.file 11 "Core/Inc/fonts.h"
 505              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 506              		.file 13 "Core/Inc/ssd1306.h"
 507              		.file 14 "<built-in>"
ARM GAS  /tmp/ccxuAkrz.s 			page 18


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccxuAkrz.s:16     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccxuAkrz.s:23     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccxuAkrz.s:89     .text.MX_GPIO_Init:0000000000000040 $d
     /tmp/ccxuAkrz.s:94     .text.Error_Handler:0000000000000000 $t
     /tmp/ccxuAkrz.s:101    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccxuAkrz.s:133    .text.MX_I2C1_Init:0000000000000000 $t
     /tmp/ccxuAkrz.s:139    .text.MX_I2C1_Init:0000000000000000 MX_I2C1_Init
     /tmp/ccxuAkrz.s:197    .text.MX_I2C1_Init:000000000000002c $d
     /tmp/ccxuAkrz.s:204    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccxuAkrz.s:210    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccxuAkrz.s:265    .text.MX_USART1_UART_Init:000000000000002c $d
     /tmp/ccxuAkrz.s:271    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccxuAkrz.s:278    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccxuAkrz.s:383    .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccxuAkrz.s:390    .text.main:0000000000000000 $t
     /tmp/ccxuAkrz.s:397    .text.main:0000000000000000 main
     /tmp/ccxuAkrz.s:472    .text.main:000000000000005c $d
     /tmp/ccxuAkrz.s:492    .bss.huart1:0000000000000000 huart1
     /tmp/ccxuAkrz.s:485    .bss.hi2c1:0000000000000000 hi2c1
     /tmp/ccxuAkrz.s:481    .bss.hi2c1:0000000000000000 $d
     /tmp/ccxuAkrz.s:488    .bss.huart1:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_I2C_Init
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
SSD1306_Init
SSD1306_GotoXY
SSD1306_Puts
SSD1306_UpdateScreen
HAL_Delay
SSD1306_Clear
Font_11x18
