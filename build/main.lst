ARM GAS  /tmp/ccaqh905.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB67:
  25              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include "ssd1306.h"
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  /tmp/ccaqh905.s 			page 2


  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** UART_HandleTypeDef huart1;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE BEGIN PV */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE END PV */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  53:Core/Src/main.c **** void SystemClock_Config(void);
  54:Core/Src/main.c **** static void MX_GPIO_Init(void);
  55:Core/Src/main.c **** static void MX_I2C1_Init(void);
  56:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  57:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* USER CODE END PFP */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  62:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* USER CODE END 0 */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /**
  67:Core/Src/main.c ****   * @brief  The application entry point.
  68:Core/Src/main.c ****   * @retval int
  69:Core/Src/main.c ****   */
  70:Core/Src/main.c **** int main(void)
  71:Core/Src/main.c **** {
  72:Core/Src/main.c **** 
  73:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* USER CODE END 1 */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  80:Core/Src/main.c ****   HAL_Init();
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE END Init */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* Configure the system clock */
  87:Core/Src/main.c ****   SystemClock_Config();
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  90:Core/Src/main.c **** 
ARM GAS  /tmp/ccaqh905.s 			page 3


  91:Core/Src/main.c ****   /* USER CODE END SysInit */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* Initialize all configured peripherals */
  94:Core/Src/main.c ****   MX_GPIO_Init();
  95:Core/Src/main.c ****   MX_I2C1_Init();
  96:Core/Src/main.c ****   MX_USART1_UART_Init();
  97:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  98:Core/Src/main.c ****   ssd1306_Init();
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* USER CODE END 2 */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* Infinite loop */
 103:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 104:Core/Src/main.c ****   while (1)
 105:Core/Src/main.c ****   {
 106:Core/Src/main.c ****     /* USER CODE END WHILE */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 109:Core/Src/main.c ****   }
 110:Core/Src/main.c ****   /* USER CODE END 3 */
 111:Core/Src/main.c **** }
 112:Core/Src/main.c **** 
 113:Core/Src/main.c **** /**
 114:Core/Src/main.c ****   * @brief System Clock Configuration
 115:Core/Src/main.c ****   * @retval None
 116:Core/Src/main.c ****   */
 117:Core/Src/main.c **** void SystemClock_Config(void)
 118:Core/Src/main.c **** {
 119:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 120:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 123:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 124:Core/Src/main.c ****   */
 125:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 126:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 127:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 128:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 129:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 130:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 131:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 132:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 133:Core/Src/main.c ****   {
 134:Core/Src/main.c ****     Error_Handler();
 135:Core/Src/main.c ****   }
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 138:Core/Src/main.c ****   */
 139:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 140:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 141:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 142:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 143:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 144:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 145:Core/Src/main.c **** 
 146:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 147:Core/Src/main.c ****   {
ARM GAS  /tmp/ccaqh905.s 			page 4


 148:Core/Src/main.c ****     Error_Handler();
 149:Core/Src/main.c ****   }
 150:Core/Src/main.c **** }
 151:Core/Src/main.c **** 
 152:Core/Src/main.c **** /**
 153:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 154:Core/Src/main.c ****   * @param None
 155:Core/Src/main.c ****   * @retval None
 156:Core/Src/main.c ****   */
 157:Core/Src/main.c **** static void MX_I2C1_Init(void)
 158:Core/Src/main.c **** {
 159:Core/Src/main.c **** 
 160:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 167:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 168:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 400000;
 169:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 170:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 171:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 172:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 173:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 174:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 175:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 176:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 177:Core/Src/main.c ****   {
 178:Core/Src/main.c ****     Error_Handler();
 179:Core/Src/main.c ****   }
 180:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 181:Core/Src/main.c **** 
 182:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 183:Core/Src/main.c **** 
 184:Core/Src/main.c **** }
 185:Core/Src/main.c **** 
 186:Core/Src/main.c **** /**
 187:Core/Src/main.c ****   * @brief USART1 Initialization Function
 188:Core/Src/main.c ****   * @param None
 189:Core/Src/main.c ****   * @retval None
 190:Core/Src/main.c ****   */
 191:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 192:Core/Src/main.c **** {
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 199:Core/Src/main.c **** 
 200:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 201:Core/Src/main.c ****   huart1.Instance = USART1;
 202:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 203:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 204:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
ARM GAS  /tmp/ccaqh905.s 			page 5


 205:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 206:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 207:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 208:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 209:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 210:Core/Src/main.c ****   {
 211:Core/Src/main.c ****     Error_Handler();
 212:Core/Src/main.c ****   }
 213:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 214:Core/Src/main.c **** 
 215:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 216:Core/Src/main.c **** 
 217:Core/Src/main.c **** }
 218:Core/Src/main.c **** 
 219:Core/Src/main.c **** /**
 220:Core/Src/main.c ****   * @brief GPIO Initialization Function
 221:Core/Src/main.c ****   * @param None
 222:Core/Src/main.c ****   * @retval None
 223:Core/Src/main.c ****   */
 224:Core/Src/main.c **** static void MX_GPIO_Init(void)
 225:Core/Src/main.c **** {
  26              		.loc 1 225 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 16
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 84B0     		sub	sp, sp, #16
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 16
 226:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 227:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 228:Core/Src/main.c **** 
 229:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 230:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  34              		.loc 1 230 3 view .LVU1
  35              	.LBB4:
  36              		.loc 1 230 3 view .LVU2
  37              		.loc 1 230 3 view .LVU3
  38 0002 0F4B     		ldr	r3, .L3
  39 0004 9A69     		ldr	r2, [r3, #24]
  40 0006 42F02002 		orr	r2, r2, #32
  41 000a 9A61     		str	r2, [r3, #24]
  42              		.loc 1 230 3 view .LVU4
  43 000c 9A69     		ldr	r2, [r3, #24]
  44 000e 02F02002 		and	r2, r2, #32
  45 0012 0192     		str	r2, [sp, #4]
  46              		.loc 1 230 3 view .LVU5
  47 0014 019A     		ldr	r2, [sp, #4]
  48              	.LBE4:
  49              		.loc 1 230 3 view .LVU6
 231:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  50              		.loc 1 231 3 view .LVU7
  51              	.LBB5:
  52              		.loc 1 231 3 view .LVU8
  53              		.loc 1 231 3 view .LVU9
  54 0016 9A69     		ldr	r2, [r3, #24]
  55 0018 42F00402 		orr	r2, r2, #4
ARM GAS  /tmp/ccaqh905.s 			page 6


  56 001c 9A61     		str	r2, [r3, #24]
  57              		.loc 1 231 3 view .LVU10
  58 001e 9A69     		ldr	r2, [r3, #24]
  59 0020 02F00402 		and	r2, r2, #4
  60 0024 0292     		str	r2, [sp, #8]
  61              		.loc 1 231 3 view .LVU11
  62 0026 029A     		ldr	r2, [sp, #8]
  63              	.LBE5:
  64              		.loc 1 231 3 view .LVU12
 232:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  65              		.loc 1 232 3 view .LVU13
  66              	.LBB6:
  67              		.loc 1 232 3 view .LVU14
  68              		.loc 1 232 3 view .LVU15
  69 0028 9A69     		ldr	r2, [r3, #24]
  70 002a 42F00802 		orr	r2, r2, #8
  71 002e 9A61     		str	r2, [r3, #24]
  72              		.loc 1 232 3 view .LVU16
  73 0030 9B69     		ldr	r3, [r3, #24]
  74 0032 03F00803 		and	r3, r3, #8
  75 0036 0393     		str	r3, [sp, #12]
  76              		.loc 1 232 3 view .LVU17
  77 0038 039B     		ldr	r3, [sp, #12]
  78              	.LBE6:
  79              		.loc 1 232 3 view .LVU18
 233:Core/Src/main.c **** 
 234:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 235:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 236:Core/Src/main.c **** }
  80              		.loc 1 236 1 is_stmt 0 view .LVU19
  81 003a 04B0     		add	sp, sp, #16
  82              	.LCFI1:
  83              		.cfi_def_cfa_offset 0
  84              		@ sp needed
  85 003c 7047     		bx	lr
  86              	.L4:
  87 003e 00BF     		.align	2
  88              	.L3:
  89 0040 00100240 		.word	1073876992
  90              		.cfi_endproc
  91              	.LFE67:
  93              		.section	.text.Error_Handler,"ax",%progbits
  94              		.align	1
  95              		.global	Error_Handler
  96              		.syntax unified
  97              		.thumb
  98              		.thumb_func
  99              		.fpu softvfp
 101              	Error_Handler:
 102              	.LFB68:
 237:Core/Src/main.c **** 
 238:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 239:Core/Src/main.c **** 
 240:Core/Src/main.c **** /* USER CODE END 4 */
 241:Core/Src/main.c **** 
 242:Core/Src/main.c **** /**
 243:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
ARM GAS  /tmp/ccaqh905.s 			page 7


 244:Core/Src/main.c ****   * @retval None
 245:Core/Src/main.c ****   */
 246:Core/Src/main.c **** void Error_Handler(void)
 247:Core/Src/main.c **** {
 103              		.loc 1 247 1 is_stmt 1 view -0
 104              		.cfi_startproc
 105              		@ Volatile: function does not return.
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 248:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 249:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 250:Core/Src/main.c ****   __disable_irq();
 109              		.loc 1 250 3 view .LVU21
 110              	.LBB7:
 111              	.LBI7:
 112              		.file 2 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****  * @version  V4.30
   5:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****  * @date     20. October 2015
   6:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
   9:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    All rights reserved.
  10:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****      specific prior written permission.
  20:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    *
  21:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
  35:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
  38:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
ARM GAS  /tmp/ccaqh905.s 			page 8


  41:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** #endif
  45:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
  46:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
  47:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****   @{
  51:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****  */
  52:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
  53:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** /**
  54:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****  */
  58:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** {
  60:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** }
  62:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
  63:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
  64:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** /**
  65:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****  */
  69:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
 113              		.loc 2 69 57 view .LVU22
 114              	.LBB8:
  70:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** {
  71:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 115              		.loc 2 71 3 view .LVU23
 116              		.syntax unified
 117              	@ 71 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h" 1
 118 0000 72B6     		cpsid i
 119              	@ 0 "" 2
 120              		.thumb
 121              		.syntax unified
 122              	.L6:
 123              	.LBE8:
 124              	.LBE7:
 251:Core/Src/main.c ****   while (1)
 125              		.loc 1 251 3 discriminator 1 view .LVU24
 252:Core/Src/main.c ****   {
 253:Core/Src/main.c ****   }
 126              		.loc 1 253 3 discriminator 1 view .LVU25
 251:Core/Src/main.c ****   while (1)
 127              		.loc 1 251 9 discriminator 1 view .LVU26
 128 0002 FEE7     		b	.L6
 129              		.cfi_endproc
 130              	.LFE68:
 132              		.section	.text.MX_I2C1_Init,"ax",%progbits
 133              		.align	1
 134              		.syntax unified
 135              		.thumb
ARM GAS  /tmp/ccaqh905.s 			page 9


 136              		.thumb_func
 137              		.fpu softvfp
 139              	MX_I2C1_Init:
 140              	.LFB65:
 158:Core/Src/main.c **** 
 141              		.loc 1 158 1 view -0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145 0000 08B5     		push	{r3, lr}
 146              	.LCFI2:
 147              		.cfi_def_cfa_offset 8
 148              		.cfi_offset 3, -8
 149              		.cfi_offset 14, -4
 167:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 400000;
 150              		.loc 1 167 3 view .LVU28
 167:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 400000;
 151              		.loc 1 167 18 is_stmt 0 view .LVU29
 152 0002 0A48     		ldr	r0, .L11
 153 0004 0A4B     		ldr	r3, .L11+4
 154 0006 0360     		str	r3, [r0]
 168:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 155              		.loc 1 168 3 is_stmt 1 view .LVU30
 168:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 156              		.loc 1 168 25 is_stmt 0 view .LVU31
 157 0008 0A4B     		ldr	r3, .L11+8
 158 000a 4360     		str	r3, [r0, #4]
 169:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 159              		.loc 1 169 3 is_stmt 1 view .LVU32
 169:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 160              		.loc 1 169 24 is_stmt 0 view .LVU33
 161 000c 0023     		movs	r3, #0
 162 000e 8360     		str	r3, [r0, #8]
 170:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 163              		.loc 1 170 3 is_stmt 1 view .LVU34
 170:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 164              		.loc 1 170 26 is_stmt 0 view .LVU35
 165 0010 C360     		str	r3, [r0, #12]
 171:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 166              		.loc 1 171 3 is_stmt 1 view .LVU36
 171:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 167              		.loc 1 171 29 is_stmt 0 view .LVU37
 168 0012 4FF48042 		mov	r2, #16384
 169 0016 0261     		str	r2, [r0, #16]
 172:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 170              		.loc 1 172 3 is_stmt 1 view .LVU38
 172:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 171              		.loc 1 172 30 is_stmt 0 view .LVU39
 172 0018 4361     		str	r3, [r0, #20]
 173:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 173              		.loc 1 173 3 is_stmt 1 view .LVU40
 173:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 174              		.loc 1 173 26 is_stmt 0 view .LVU41
 175 001a 8361     		str	r3, [r0, #24]
 174:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 176              		.loc 1 174 3 is_stmt 1 view .LVU42
 174:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
ARM GAS  /tmp/ccaqh905.s 			page 10


 177              		.loc 1 174 30 is_stmt 0 view .LVU43
 178 001c C361     		str	r3, [r0, #28]
 175:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 179              		.loc 1 175 3 is_stmt 1 view .LVU44
 175:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 180              		.loc 1 175 28 is_stmt 0 view .LVU45
 181 001e 0362     		str	r3, [r0, #32]
 176:Core/Src/main.c ****   {
 182              		.loc 1 176 3 is_stmt 1 view .LVU46
 176:Core/Src/main.c ****   {
 183              		.loc 1 176 7 is_stmt 0 view .LVU47
 184 0020 FFF7FEFF 		bl	HAL_I2C_Init
 185              	.LVL0:
 176:Core/Src/main.c ****   {
 186              		.loc 1 176 6 view .LVU48
 187 0024 00B9     		cbnz	r0, .L10
 184:Core/Src/main.c **** 
 188              		.loc 1 184 1 view .LVU49
 189 0026 08BD     		pop	{r3, pc}
 190              	.L10:
 178:Core/Src/main.c ****   }
 191              		.loc 1 178 5 is_stmt 1 view .LVU50
 192 0028 FFF7FEFF 		bl	Error_Handler
 193              	.LVL1:
 194              	.L12:
 195              		.align	2
 196              	.L11:
 197 002c 00000000 		.word	.LANCHOR0
 198 0030 00540040 		.word	1073763328
 199 0034 801A0600 		.word	400000
 200              		.cfi_endproc
 201              	.LFE65:
 203              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 204              		.align	1
 205              		.syntax unified
 206              		.thumb
 207              		.thumb_func
 208              		.fpu softvfp
 210              	MX_USART1_UART_Init:
 211              	.LFB66:
 192:Core/Src/main.c **** 
 212              		.loc 1 192 1 view -0
 213              		.cfi_startproc
 214              		@ args = 0, pretend = 0, frame = 0
 215              		@ frame_needed = 0, uses_anonymous_args = 0
 216 0000 08B5     		push	{r3, lr}
 217              	.LCFI3:
 218              		.cfi_def_cfa_offset 8
 219              		.cfi_offset 3, -8
 220              		.cfi_offset 14, -4
 201:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 221              		.loc 1 201 3 view .LVU52
 201:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 222              		.loc 1 201 19 is_stmt 0 view .LVU53
 223 0002 0A48     		ldr	r0, .L17
 224 0004 0A4B     		ldr	r3, .L17+4
 225 0006 0360     		str	r3, [r0]
ARM GAS  /tmp/ccaqh905.s 			page 11


 202:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 226              		.loc 1 202 3 is_stmt 1 view .LVU54
 202:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 227              		.loc 1 202 24 is_stmt 0 view .LVU55
 228 0008 4FF4E133 		mov	r3, #115200
 229 000c 4360     		str	r3, [r0, #4]
 203:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 230              		.loc 1 203 3 is_stmt 1 view .LVU56
 203:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 231              		.loc 1 203 26 is_stmt 0 view .LVU57
 232 000e 0023     		movs	r3, #0
 233 0010 8360     		str	r3, [r0, #8]
 204:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 234              		.loc 1 204 3 is_stmt 1 view .LVU58
 204:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 235              		.loc 1 204 24 is_stmt 0 view .LVU59
 236 0012 C360     		str	r3, [r0, #12]
 205:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 237              		.loc 1 205 3 is_stmt 1 view .LVU60
 205:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 238              		.loc 1 205 22 is_stmt 0 view .LVU61
 239 0014 0361     		str	r3, [r0, #16]
 206:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 240              		.loc 1 206 3 is_stmt 1 view .LVU62
 206:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 241              		.loc 1 206 20 is_stmt 0 view .LVU63
 242 0016 0C22     		movs	r2, #12
 243 0018 4261     		str	r2, [r0, #20]
 207:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 244              		.loc 1 207 3 is_stmt 1 view .LVU64
 207:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 245              		.loc 1 207 25 is_stmt 0 view .LVU65
 246 001a 8361     		str	r3, [r0, #24]
 208:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 247              		.loc 1 208 3 is_stmt 1 view .LVU66
 208:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 248              		.loc 1 208 28 is_stmt 0 view .LVU67
 249 001c C361     		str	r3, [r0, #28]
 209:Core/Src/main.c ****   {
 250              		.loc 1 209 3 is_stmt 1 view .LVU68
 209:Core/Src/main.c ****   {
 251              		.loc 1 209 7 is_stmt 0 view .LVU69
 252 001e FFF7FEFF 		bl	HAL_UART_Init
 253              	.LVL2:
 209:Core/Src/main.c ****   {
 254              		.loc 1 209 6 view .LVU70
 255 0022 00B9     		cbnz	r0, .L16
 217:Core/Src/main.c **** 
 256              		.loc 1 217 1 view .LVU71
 257 0024 08BD     		pop	{r3, pc}
 258              	.L16:
 211:Core/Src/main.c ****   }
 259              		.loc 1 211 5 is_stmt 1 view .LVU72
 260 0026 FFF7FEFF 		bl	Error_Handler
 261              	.LVL3:
 262              	.L18:
 263 002a 00BF     		.align	2
ARM GAS  /tmp/ccaqh905.s 			page 12


 264              	.L17:
 265 002c 00000000 		.word	.LANCHOR1
 266 0030 00380140 		.word	1073821696
 267              		.cfi_endproc
 268              	.LFE66:
 270              		.section	.text.SystemClock_Config,"ax",%progbits
 271              		.align	1
 272              		.global	SystemClock_Config
 273              		.syntax unified
 274              		.thumb
 275              		.thumb_func
 276              		.fpu softvfp
 278              	SystemClock_Config:
 279              	.LFB64:
 118:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 280              		.loc 1 118 1 view -0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 64
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284 0000 00B5     		push	{lr}
 285              	.LCFI4:
 286              		.cfi_def_cfa_offset 4
 287              		.cfi_offset 14, -4
 288 0002 91B0     		sub	sp, sp, #68
 289              	.LCFI5:
 290              		.cfi_def_cfa_offset 72
 119:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 291              		.loc 1 119 3 view .LVU74
 119:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 292              		.loc 1 119 22 is_stmt 0 view .LVU75
 293 0004 2822     		movs	r2, #40
 294 0006 0021     		movs	r1, #0
 295 0008 06A8     		add	r0, sp, #24
 296 000a FFF7FEFF 		bl	memset
 297              	.LVL4:
 120:Core/Src/main.c **** 
 298              		.loc 1 120 3 is_stmt 1 view .LVU76
 120:Core/Src/main.c **** 
 299              		.loc 1 120 22 is_stmt 0 view .LVU77
 300 000e 0023     		movs	r3, #0
 301 0010 0193     		str	r3, [sp, #4]
 302 0012 0293     		str	r3, [sp, #8]
 303 0014 0393     		str	r3, [sp, #12]
 304 0016 0493     		str	r3, [sp, #16]
 305 0018 0593     		str	r3, [sp, #20]
 125:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 306              		.loc 1 125 3 is_stmt 1 view .LVU78
 125:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 307              		.loc 1 125 36 is_stmt 0 view .LVU79
 308 001a 0122     		movs	r2, #1
 309 001c 0692     		str	r2, [sp, #24]
 126:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 310              		.loc 1 126 3 is_stmt 1 view .LVU80
 126:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 311              		.loc 1 126 30 is_stmt 0 view .LVU81
 312 001e 4FF48033 		mov	r3, #65536
 313 0022 0793     		str	r3, [sp, #28]
ARM GAS  /tmp/ccaqh905.s 			page 13


 127:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 314              		.loc 1 127 3 is_stmt 1 view .LVU82
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 315              		.loc 1 128 3 view .LVU83
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 316              		.loc 1 128 30 is_stmt 0 view .LVU84
 317 0024 0A92     		str	r2, [sp, #40]
 129:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 318              		.loc 1 129 3 is_stmt 1 view .LVU85
 129:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 319              		.loc 1 129 34 is_stmt 0 view .LVU86
 320 0026 0222     		movs	r2, #2
 321 0028 0D92     		str	r2, [sp, #52]
 130:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 322              		.loc 1 130 3 is_stmt 1 view .LVU87
 130:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 323              		.loc 1 130 35 is_stmt 0 view .LVU88
 324 002a 0E93     		str	r3, [sp, #56]
 131:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 325              		.loc 1 131 3 is_stmt 1 view .LVU89
 131:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 326              		.loc 1 131 32 is_stmt 0 view .LVU90
 327 002c 4FF4E013 		mov	r3, #1835008
 328 0030 0F93     		str	r3, [sp, #60]
 132:Core/Src/main.c ****   {
 329              		.loc 1 132 3 is_stmt 1 view .LVU91
 132:Core/Src/main.c ****   {
 330              		.loc 1 132 7 is_stmt 0 view .LVU92
 331 0032 06A8     		add	r0, sp, #24
 332 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
 333              	.LVL5:
 132:Core/Src/main.c ****   {
 334              		.loc 1 132 6 view .LVU93
 335 0038 80B9     		cbnz	r0, .L23
 139:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 336              		.loc 1 139 3 is_stmt 1 view .LVU94
 139:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 337              		.loc 1 139 31 is_stmt 0 view .LVU95
 338 003a 0F23     		movs	r3, #15
 339 003c 0193     		str	r3, [sp, #4]
 141:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 340              		.loc 1 141 3 is_stmt 1 view .LVU96
 141:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 341              		.loc 1 141 34 is_stmt 0 view .LVU97
 342 003e 0221     		movs	r1, #2
 343 0040 0291     		str	r1, [sp, #8]
 142:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 344              		.loc 1 142 3 is_stmt 1 view .LVU98
 142:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 345              		.loc 1 142 35 is_stmt 0 view .LVU99
 346 0042 0023     		movs	r3, #0
 347 0044 0393     		str	r3, [sp, #12]
 143:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 348              		.loc 1 143 3 is_stmt 1 view .LVU100
 143:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 349              		.loc 1 143 36 is_stmt 0 view .LVU101
 350 0046 4FF48062 		mov	r2, #1024
ARM GAS  /tmp/ccaqh905.s 			page 14


 351 004a 0492     		str	r2, [sp, #16]
 144:Core/Src/main.c **** 
 352              		.loc 1 144 3 is_stmt 1 view .LVU102
 144:Core/Src/main.c **** 
 353              		.loc 1 144 36 is_stmt 0 view .LVU103
 354 004c 0593     		str	r3, [sp, #20]
 146:Core/Src/main.c ****   {
 355              		.loc 1 146 3 is_stmt 1 view .LVU104
 146:Core/Src/main.c ****   {
 356              		.loc 1 146 7 is_stmt 0 view .LVU105
 357 004e 01A8     		add	r0, sp, #4
 358 0050 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 359              	.LVL6:
 146:Core/Src/main.c ****   {
 360              		.loc 1 146 6 view .LVU106
 361 0054 20B9     		cbnz	r0, .L24
 150:Core/Src/main.c **** 
 362              		.loc 1 150 1 view .LVU107
 363 0056 11B0     		add	sp, sp, #68
 364              	.LCFI6:
 365              		.cfi_remember_state
 366              		.cfi_def_cfa_offset 4
 367              		@ sp needed
 368 0058 5DF804FB 		ldr	pc, [sp], #4
 369              	.L23:
 370              	.LCFI7:
 371              		.cfi_restore_state
 134:Core/Src/main.c ****   }
 372              		.loc 1 134 5 is_stmt 1 view .LVU108
 373 005c FFF7FEFF 		bl	Error_Handler
 374              	.LVL7:
 375              	.L24:
 148:Core/Src/main.c ****   }
 376              		.loc 1 148 5 view .LVU109
 377 0060 FFF7FEFF 		bl	Error_Handler
 378              	.LVL8:
 379              		.cfi_endproc
 380              	.LFE64:
 382              		.section	.text.main,"ax",%progbits
 383              		.align	1
 384              		.global	main
 385              		.syntax unified
 386              		.thumb
 387              		.thumb_func
 388              		.fpu softvfp
 390              	main:
 391              	.LFB63:
  71:Core/Src/main.c **** 
 392              		.loc 1 71 1 view -0
 393              		.cfi_startproc
 394              		@ Volatile: function does not return.
 395              		@ args = 0, pretend = 0, frame = 0
 396              		@ frame_needed = 0, uses_anonymous_args = 0
 397 0000 08B5     		push	{r3, lr}
 398              	.LCFI8:
 399              		.cfi_def_cfa_offset 8
 400              		.cfi_offset 3, -8
ARM GAS  /tmp/ccaqh905.s 			page 15


 401              		.cfi_offset 14, -4
  80:Core/Src/main.c **** 
 402              		.loc 1 80 3 view .LVU111
 403 0002 FFF7FEFF 		bl	HAL_Init
 404              	.LVL9:
  87:Core/Src/main.c **** 
 405              		.loc 1 87 3 view .LVU112
 406 0006 FFF7FEFF 		bl	SystemClock_Config
 407              	.LVL10:
  94:Core/Src/main.c ****   MX_I2C1_Init();
 408              		.loc 1 94 3 view .LVU113
 409 000a FFF7FEFF 		bl	MX_GPIO_Init
 410              	.LVL11:
  95:Core/Src/main.c ****   MX_USART1_UART_Init();
 411              		.loc 1 95 3 view .LVU114
 412 000e FFF7FEFF 		bl	MX_I2C1_Init
 413              	.LVL12:
  96:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 414              		.loc 1 96 3 view .LVU115
 415 0012 FFF7FEFF 		bl	MX_USART1_UART_Init
 416              	.LVL13:
  98:Core/Src/main.c **** 
 417              		.loc 1 98 3 view .LVU116
 418 0016 FFF7FEFF 		bl	ssd1306_Init
 419              	.LVL14:
 420              	.L26:
 104:Core/Src/main.c ****   {
 421              		.loc 1 104 3 discriminator 1 view .LVU117
 109:Core/Src/main.c ****   /* USER CODE END 3 */
 422              		.loc 1 109 3 discriminator 1 view .LVU118
 104:Core/Src/main.c ****   {
 423              		.loc 1 104 9 discriminator 1 view .LVU119
 424 001a FEE7     		b	.L26
 425              		.cfi_endproc
 426              	.LFE63:
 428              		.global	huart1
 429              		.global	hi2c1
 430              		.section	.bss.hi2c1,"aw",%nobits
 431              		.align	2
 432              		.set	.LANCHOR0,. + 0
 435              	hi2c1:
 436 0000 00000000 		.space	84
 436      00000000 
 436      00000000 
 436      00000000 
 436      00000000 
 437              		.section	.bss.huart1,"aw",%nobits
 438              		.align	2
 439              		.set	.LANCHOR1,. + 0
 442              	huart1:
 443 0000 00000000 		.space	72
 443      00000000 
 443      00000000 
 443      00000000 
 443      00000000 
 444              		.text
 445              	.Letext0:
ARM GAS  /tmp/ccaqh905.s 			page 16


 446              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 447              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 448              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 449              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 450              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 451              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 452              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 453              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 454              		.file 11 "Core/Inc/ssd1306.h"
 455              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 456              		.file 13 "<built-in>"
ARM GAS  /tmp/ccaqh905.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccaqh905.s:16     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccaqh905.s:23     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccaqh905.s:89     .text.MX_GPIO_Init:0000000000000040 $d
     /tmp/ccaqh905.s:94     .text.Error_Handler:0000000000000000 $t
     /tmp/ccaqh905.s:101    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccaqh905.s:133    .text.MX_I2C1_Init:0000000000000000 $t
     /tmp/ccaqh905.s:139    .text.MX_I2C1_Init:0000000000000000 MX_I2C1_Init
     /tmp/ccaqh905.s:197    .text.MX_I2C1_Init:000000000000002c $d
     /tmp/ccaqh905.s:204    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccaqh905.s:210    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccaqh905.s:265    .text.MX_USART1_UART_Init:000000000000002c $d
     /tmp/ccaqh905.s:271    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccaqh905.s:278    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccaqh905.s:383    .text.main:0000000000000000 $t
     /tmp/ccaqh905.s:390    .text.main:0000000000000000 main
     /tmp/ccaqh905.s:442    .bss.huart1:0000000000000000 huart1
     /tmp/ccaqh905.s:435    .bss.hi2c1:0000000000000000 hi2c1
     /tmp/ccaqh905.s:431    .bss.hi2c1:0000000000000000 $d
     /tmp/ccaqh905.s:438    .bss.huart1:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_I2C_Init
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
ssd1306_Init
